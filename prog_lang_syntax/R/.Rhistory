# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
# mqy
rep(seq(1, 3), 2)
rep(seq(1, 3), each=2)
help(by)
help("tapply")
help(by)
data <- data.frame(
Class = c("A", "A", "B", "B", "C", "C"),
Student = c("John", "Alice", "Bob", "Eve", "Charlie", "David"),
Score = c(85, 90, 78, 88, 92, 95)
)
by(data$Score, data$Class, mean)
mode(by(data$Score, data$Class, mean))
class(by(data$Score, data$Class, mean))
means<-by(data$Score, data$Class, mean)
means
means[C]
means[1]
c(1, 2, 3)[3, 2, 1, 1, 2, 3]
c(1, 2, 3)[c(3, 2, 1, 1, 2, 3)]
x <- 2 <- 3
x <- y <- 3
x<-2<-3
x<-(2<-3)
2 < -3
2 <-3
2<-3
x<-(2< -3)
x<-2< -3
x
class(1)
class(1L)
class(1.0)
mode(1L)
mode(factor(c("a","b"))); class(factor(c("a","b")))
factor(c("a","b")
)
rep(seq(0,4), each=5)
rep(seq(0,4), )
rep(seq(0,4), 5)
rep(seq(1,5), 5)
matrix(1:10, nrow=3)
m <- matrix(1:12, nrow=3)
m
m[c(1, 2), c(3, 2, 4)]
m[, -3]
help("as")
v = c(1, 2, 3, 'a', 'b', 4)
as.numeric(v)
as.character(v)
v
as.logical(v)
l = as.logical(v)
mode(;)
mode(l)
ls()
rm(ls())
rm(ls=ls())
rm(l=ls())
ls()
women[[]]
women[[1]]
women
women[1]
women[[1]]
l = list(c(1, 2, 3), "a", c(T, T, F))
l
l[1]
l[c(1, 3)]
w<-list(1:3,c("a","b"),T)
w[1]
w[c(1, 3)]
women#h
women$height
women[[1]]
women#h
women[[1]]
women$height
women[[1, 2]]
women[[1]
]
women[[1]]
women[[1, 2]]
women
women[[c(1, 2)]]
women[[1]]
w[[1]]
w[[c(1, 2)]]
women[[1]]
women[1]
women["weight"]
women["wei"]
w
names(w) = c("ab" ,"y", "z")
w["a"]
women["wei"]
women$wei
women$weight
w<-list("ab"=1:3, "y"=c("a","b"), "z"=T)
list
w
w<-list(ab=1:3, y=c("a","b"), z=T)
w
w<-list(ab=1:3, y=c("a","b"), 1=T)
w<-list(ab=1:3, y=c("a","b"), "1"=T)
w
factor(c(1, 2, 3))
factor(c(1, 2, 2, 2, 1))
nums <- factor(c(1, 2, 2, 2, 1))
nums == 1
nums == "1"
nums <- factor(c(3, 2, 2, 2, 3))
nums == 3
nums == "3"
as.integer(nums)
x = 1
x[3] = 3
x
48:14*3
48:(14*3)
48:14
View(config)
(48:14)^2
cumsum(c(1, 2, 3, 4))
1L == 1
1L == 1.0
1L == 1.0000000000000000000000000000000001
1L == 1.0000001
class(1L)
class(round(1.5))
round(1.5)
```
trunc(1.5)
class(trunc(1.5))
y = sqrt(1:6)
y <- sqrt(1:5)
y <- c(-y, y)
mean(sqrt(y))
mean(c(Nan, 1, 2))
mean(c(NaN, 1, 2))
help("plot")
help(round)
edit(file="ch2-apply.r")
help(apply)
y <- matrix(runif(500, 0, 20), ncol=10)
m<-apply(y,2,mean)
m
y <- matrix(runif(500, 0, 20), ncol=5)
m<-apply(y,2,mean)
m
help(source)
help("read.table")
a = c(a=1, b=2, c=3)
a
names(a)
help(head)
m <- matrix(1:16, nrow=4)
m
df = data.frame(,)
df = data.frame(m)
df
m <- matrix(1:6, nrow=2)
data.frame(m)
help(split)
help(table)
x = c(1, 2, 3, 4, 5,  6, 7, 8, 9)
g = c('a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c')
names(x) = g
x
table(x)
table(g)
class(table(g))
g = c('a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'a')
class(table(g))
table(g)\
table(g)
women[c(1, 2), ]
> women[c(1, 2), 2:4]
women[c(1, 2), 2:4]
women[c(1, 2),]
women[c(1, 2)]
women[c(1, 2),]
women[c(1, 2),1]
> data <- data.frame(
data <- data.frame(
Class = c("A", "A", "B", "B", "C", "C"),
Student = c("John", "Alice", "Bob", "Eve", "Charlie", "David"),
Score = c(85, 90, 78, 88, 92, 95)
Score2 = c(80, 92, 74, 82, 93, 96)
data <- data.frame(
Class = c("A", "A", "B", "B", "C", "C"),
Student = c("John", "Alice", "Bob", "Eve", "Charlie", "David"),
Score = c(85, 90, 78, 88, 92, 95),
Score2 = c(80, 92, 74, 82, 93, 96)
)
data
by(data[, c(3, 4)], data$Class, colMeans)
help("colMeans")
x <- runif(500, min=0, max=10)
dense <- as.numeric(x > 7)
(t <- table(dense, x))
x <- sample(1:8, size=50)
x <- sample(1:8, size=50, replace=T)
dense <- as.numeric(x > 7)
x <- sample(1:8, size=50, replace=T)
dense <- as.numeric(x > 6)
(t <- table(dense, x))
g = c('a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'a')
name = c('Alice', 'Alice', 'Alice', 'Alice', 'Bob', 'Bob', 'Bob', 'Cathy', 'Cathy')
table(name, g)
names = c('Alice', 'Alice', 'Alice', 'Alice', 'Bob', 'Bob', 'Bob', 'Bob', 'Bob')
table(names, g)
v = 1:3
v[1]
v <- 1:3
v[1] <- 0
v
w<-list("ab"=1:3, "y"=c("a","b"), "z"=T)
w
(w<-list("ab"=1:3, "y"=c("a","b"), "z"=T))
(w[2] <- c(1, 2, 3))
w[2]
(w<-list("ab"=1:3, "y"=c("a","b"), "z"=T))
w[1] <- c(1, 2)
w
w$ab <- c(1, 2)
w
(w<-list("ab"=1:3, "y"=c("a","b"), "z"=T))
w$y <- c(1, 2)
w
(w<-list("ab"=1:3, "y"=c("a","b"), "z"=T))
w[2]
w[2] <- c(1, 2)
w
(w<-list("ab"=1:3, "y"=c("a","b"), "z"=T))
w$new = c(T, T, F)
w
help(aggregate)
state.x77
weight
chickwts
head(chickwts)
head(esoph)
aggregate(cbind(ncases, ncontrols) ~ alcgp + tobgp, data = esoph, sum)
help(cbind)
m33 = matrix(1:9, nrow=3)
(m33 <- matrix(1:9, nrow=3))
(m31 <- matrix(1:3, nrow=3))
(m13 <- matrix(1:3, nrow=1))
cbind(m33, m13)
cbind(m33, m31)
length(women)
length(women[1])
women[1]
women[[1]]
length(women[[1]])
rand6 <- sampe(6)
rand6 <- sample(6)
cbind(head(women), rand6)
(rand6 <- sample(6))
cbind(head(women), rand6)
help("read.table")
write.table
help(write.table)
bar(women)
barpot(women$height)
barplot(women$height)
?barplot
barplot(GNP ~ Year, data = longley)
?vapply
x=-5:5
ifelse(x<0, 100, x)
?plot
polyroot(1:5)
mode(polyroot(1:5))
9%/%2
pressure
plot(pressure$pressure, pressure$temperature))
plot(pressure$pressure, pressure$temperature)
# Q1a
plot(pressure$temperature,pressure$pressure)
curve((0.168 + 0.007*x)^(20/3), from = 0, to = 400, add = TRUE)
# Q1b
plot(pressure$temperature,(pressure$pressure)^(3/20))
# Linear relationship
abline(0.168,0.007)
# Q1d
par(mfrow=c(1,2))
# Q1d
par(bty='n', las=1)
# Q1a
plot(pressure$temperature,pressure$pressure)
curve((0.168 + 0.007*x)^(20/3), from = 0, to = 400, add = TRUE)
# Q1b
plot(pressure$temperature,(pressure$pressure)^(3/20))
# Linear relationship
abline(0.168,0.007)
pressurepar(mfrow=c(1,2))
par(mfrow=c(1,2))
par(bty='n', las=1)
plot(pressure$temperature,pressure$pressure, las=0)
plot(pressure$temperature,pressure$pressure)
# alternative answer
alt_matrix <- function(n) {outer(1:n, 1:n, "+")%%2}
edit(alt_matrix())
edit(alt_matrix
)
alt_matrix(7)
edit(alt_matrix
)
edit(alt_matrix)
alt_matrix(7)
edit(alt_matrix)
as.numeric(("1"))
as.numeric(("1e-4"))
as.numeric(("1e-2"))
as.numeric(("1*2"))
as.numeric(("2.234"))
# Author: Chung Sin Fai
# Q1a
set.seed(2005)
x <- sample(c(-2,-1,1,2),size=120,replace=T,prob=c(0.25,0.25,0.25,0.25))
x <- c(0,x)
s <- cumsum(x)
s <- as.ts(s)
plot(s, main="Q1a")
# Q1b
abline(h=max(s),col="red",lty=2)
abline(h=min(s),col="red",lty=2)
# Author: Chung Sin Fai
# Q1a
set.seed(2005)
x <- sample(c(-2,-1,1,2),size=120,replace=T,prob=c(0.25,0.25,0.25,0.25))
x <- c(0,x)
s <- cumsum(x)
s <- as.ts(s)
plot(s, main="Q1a")
c <- 1:5
c[1:3] <- 0
c
c[1:3] <- 0
c <- 1:5
(c[1:3] <- 0)
c <- 1:5
c <- 1:10
c[1:5] <- 1:2
c
curve(sin(x))
grid
grid()
curve(sin(x),  xlim=c(0, 3))
curve(sin(x),  xlim=c(0, 10))
grid()
curve(sin(x^s),  xlim=c(0, 3))
curve(sin(x^2),  xlim=c(-3, 3))
# create data frame
data <- matrix(NA, nrow = 0, ncol = 3)
colnames(data) = c("Name", "Age", "Gender")
# Q1
questionnaire <- function() {
# create data frame
data <- matrix(NA, nrow = 0, ncol = 3)
colnames(data) = c("Name", "Age", "Gender")
data <- as.data.frame(data)
# ask questions
cat("Please respond to the following three questions.\n\n")
round <- 1
repeat {
cat("Question 1: What's your name? : ")
data[round,1] <- readline()
repeat {
cat("Question 2: What's your age? <positive integer required>: ")
inp <- readline()
inp <- suppressWarnings(as.numeric(inp))
if (is.na(inp) == TRUE) {
cat("Please input positive integer.\n")
next
}
if ((trunc(inp) != inp)|(inp <= 0)) {
cat("Please input positive integer.\n")
next
}
data[round,2] <- inp
break
}
repeat {
cat("Question 3: What's your gender? <M/F>: ")
inp <- toupper(readline())
if ((inp == "M")|(inp == "F")) {
data[round,3] <- inp
break
} else {
cat("Please input M or F.\n")
}
}
repeat {
cat("New entry? <Y/N>: ")
inp <- toupper(readline())
if ((inp == "Y")|(inp == "N")) {
break
} else {
cat("Please input Y or N.\n")
}
}
if (inp == "Y") {
round <- round+1
next
} else {
break
}
}
cat("The average age is", mean(data$Age),"from", round, "respondents.\n")
m <- sum(data$Gender == "M")
pie(c(m/round,1-m/round), labels = c("M", "F"), init.angle = 90)
return(data)
}
data <- questionnaire()
data <- questionnaire()
data <- questionnaire()
data
# Q2
## a
T <- matrix(c(0.5, 0.2, 0.3,
0.3, 0.4, 0.3,
0.4, 0.3, 0.3),
nrow = 3, byrow = FALSE)
T
# Q2
## a
T <- matrix(c(0.5, 0.3, 0.4,
0.2, 0.4, 0.3,
0.3, 0.3, 0.3),
nrow = 3, byrow = FALSE)
# Q2
## a
T <- matrix(c(0.5, 0.3, 0.4,
0.2, 0.4, 0.3,
0.3, 0.3, 0.3), nrow = 3)
T
T %*% T
# Q2a
T<-matrix(c(0.5,0.2,0.3,0.3,0.4,0.3,0.4,0.3,0.3),nrow=3,byrow=T)
T%*%T
# Q2b
T6 <- diag(3)
T6
for (i in 1:6) {
T6 <- T6 %*% T
}
T6
# Q2c
# Strategy 1
T_S1 <- matrix(c(0.45, 0.3, 0.4,
0.25, 0.4, 0.3,
0.3, 0.3, 0.3), nrow=3, byrow=F)
T_S1<-matrix(c(0.45,0.25,0.3,0.3,0.4,0.3,0.4,0.3,0.3),nrow=3,byrow=T)
# Q2c
# Strategy 1
T_S1 <- matrix(c(0.45, 0.3, 0.4,
0.25, 0.4, 0.3,
0.3, 0.3, 0.3), nrow=3, byrow=F)
T_S1
T_S1<-matrix(c(0.45,0.25,0.3,0.3,0.4,0.3,0.4,0.3,0.3),nrow=3,byrow=T)
T_S1
# Strategy 2
T_S2 <- matrix(c(0.5, 0.3, 0.4,
0.2, 0.4, 0.35,
0.3, 0.3, 0.25), nrow=3, byrow=F)
T_S2
T_S2<-matrix(c(0.5,0.2,0.3,0.3,0.4,0.3,0.4,0.35,0.25),nrow=3,byrow=T)
T_S2
# Strategy 2
T_S2 <- matrix(c(0.5, 0.3, 0.4,
0.2, 0.4, 0.35,
0.3, 0.3, 0.25), nrow=3)
T_S2
# Q2c
T_S1 <- matrix(c(0.45, 0.3, 0.4,
0.25, 0.4, 0.3,
0.3, 0.3, 0.3), nrow=3)
eig1<-eigen(t(T_S1))
(eig1$vectors[,1]/sum(eig1$vectors[,1]))[2]
# Strategy 2
T_S2 <- matrix(c(0.5, 0.3, 0.4,
0.2, 0.4, 0.35,
0.3, 0.3, 0.25), nrow=3)
eig2<-eigen(t(T_S2))
(eig2$vectors[,1]/sum(eig2$vectors[,1]))[2]
# Q2c
# Strategy 1
T_S1<-matrix(c(0.45,0.25,0.3,0.3,0.4,0.3,0.4,0.3,0.3),nrow=3,byrow=T)
eig1<-eigen(t(T_S1))
(eig1$vectors[,1]/sum(eig1$vectors[,1]))[2]
# Strategy 2
T_S2<-matrix(c(0.5,0.2,0.3,0.3,0.4,0.3,0.4,0.35,0.25),nrow=3,byrow=T)
eig2<-eigen(t(T_S2))
(eig2$vectors[,1]/sum(eig2$vectors[,1]))[2]
